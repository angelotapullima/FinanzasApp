version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: finanzas-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: finanzas-backend
    build:
      context: ./FinanzasBackend
      dockerfile: Dockerfile
    restart: always
    command: npm run dev
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - db
    volumes:
      - ./FinanzasBackend:/usr/src/app
      - /usr/src/app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  frontend:
    container_name: finanzas-frontend
    build:
      context: ./FinanzasFrontend
      dockerfile: Dockerfile
    restart: always
    command: npm run dev
    ports:
      - "${FRONTEND_PORT}:5173"
    volumes:
      - ./FinanzasFrontend:/app
      - /app/node_modules
    depends_on:
      - backend

  # prometheus:
  #   image: prom/prometheus
  #   container_name: finanzas-prometheus
  #   restart: always
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #     - prometheus_data:/prometheus
  #   command: --config.file=/etc/prometheus/prometheus.yml
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

  # grafana:
  #   image: grafana/grafana
  #   container_name: finanzas-grafana
  #   restart: always
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   depends_on:
  #     prometheus:
  #       condition: service_healthy

volumes:
  pgdata:
  # prometheus_data:
  # grafana_data: