version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: finanzas-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: finanzas-backend
    build:
      context: ./FinanzasBackend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - db
    volumes:
      - ./FinanzasBackend:/usr/src/app # Para desarrollo con hot-reload
      - /usr/src/app/node_modules # No sobreescribir node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"] # Asumiendo un endpoint /health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  frontend:
    container_name: finanzas-frontend
    build:
      context: ./FinanzasFrontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  pgdata:
